import telebot
import sqlite3
import datetime
import time
import threading
import requests
import random
from telebot import types



TOKEN = '1287390579:AAG3EUanWJGFNaIp4E_6x1YCOM-QbuM3u64'
bot = telebot.TeleBot(TOKEN)
RusArr= {1:2, 2:3, 3:4 , 4:5 , 5:6 ,6:7, 7:1}
today = datetime.datetime.today().weekday()

def user_chat_id_try(message):
    conn = sqlite3.connect('schedule.db')
    cursor = conn.cursor()
    user_chat_id = message.chat.id

    chat_id_try = cursor.execute("SELECT * FROM `users` WHERE user_chat_id =(?)", (user_chat_id,)).fetchone()
    if chat_id_try == None:
        cursor.execute("INSERT INTO users (user_chat_id,username) VALUES ('%s','%s')" % (user_chat_id, message.chat.username))

    notification_try = cursor.execute("SELECT * FROM `notification` WHERE user_chat_id =(?)", (user_chat_id,)).fetchone()
    if notification_try == None:
        cursor.execute("INSERT INTO notification (user_chat_id) VALUES ('%s')" % (user_chat_id,))

    conn.commit()
    conn.close()
    return user_chat_id


#########################################################################################################################
#########################################################################################################################
# –§-—è –∞–≤—Ç–æ-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

def timeCheck ():
    conn = sqlite3.connect('schedule.db')
    cursor = conn.cursor()
    while True:
        currtime = datetime.time( datetime.datetime.now().time().hour,  datetime.datetime.now().time().minute)
        user_chat_ids =  cursor.execute('SELECT user_chat_id FROM `notification` WHERE time_n=(?)',(str(currtime),))
        user_chat_ids = user_chat_ids.fetchall()
        for user_chat_id in user_chat_ids :
                if user_chat_id != None and user_chat_id != '':
                    txt = showDay(RusArr[today+1], user_chat_id)
                    bot.send_message(user_chat_id, '<b>–ê–≤—Ç–æ-–Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è</b>\n\n' +txt, parse_mode="HTML")
        time.sleep(60)
    conn.close()
tChThr = threading.Thread(target=timeCheck, name='tchThr')
tChThr.start()
#
# #
# # ##########################################################################################################################################
# # ##########################################################################################################################################
# # # –§-—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø–∞—Ä –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å


def showDay(day, user_chat_id) :
    if day >6 :
        day=1
    conn = sqlite3.connect('schedule.db')
    cursor = conn.cursor()
    user_group = ((cursor.execute("SELECT user_group  FROM `users` WHERE user_chat_id =(?)", (user_chat_id,))).fetchone())[0]
    user_group_lessons = requests.get('https://api.rozklad.org.ua/v2/groups/{0}/timetable'.format(user_group)).json()
    if (user_group_lessons["statusCode"] == 200):
        week = requests.get('http://api.rozklad.org.ua/v2/weeks').json()
        lessons_day = user_group_lessons["data"]["weeks"][str(week['data'])]["days"][str(day)]
        text_for_send = "<b>{0}:</b>\n\n".format(lessons_day["day_name"])
        for lesson in lessons_day["lessons"]:
            text_for_send += "<b>{0}) {1}</b>  \n".format(lesson["lesson_number"], lesson["lesson_name"])
            text_for_send += "{0} {1}".format(lesson["lesson_type"], lesson["lesson_room"])
            if len(lesson["teachers"]) != 0:
                teacher = lesson["teachers"][0]
                text_for_send += " {0}\n".format(teacher["teacher_name"])
    else:
        text_for_send = '–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã: "/set IV-73" –∏–ª–∏ "/set –Ü–í-73".'
    conn.close()
    return text_for_send

# # ##########################################################################################################################################
# # ##########################################################################################################################################
#
# # # —Ñ-—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∂–µ–ª–∞–µ–º—ã–π –¥–µ–Ω—å –∏ –æ—Ç—Å—ã–ª–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ñ–æ—Ä–º–µ)
@bot.message_handler(commands=['monday','tuesday','wednesday','thursday','friday','saturday'])
def handle_monday(message):
    user_chat_id = user_chat_id_try(message)
    dictOfDays = {'monday':1,'tuesday':2 ,'wednesday':3,'thursday':4,'friday':5 ,'saturday':6 }
    bot.send_message(message.chat.id, showDay(dictOfDays[message.text[1:]], user_chat_id), parse_mode="HTML")

# # # —Ñ-—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –æ—Ç—Å—ã–ª–∞–µ—Ç —Ä–∞—Å—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é (–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ñ–æ—Ä–º–µ)
@bot.message_handler(commands=['all'])
def handle_all(message):
    user_chat_id = user_chat_id_try(message)
    conn = sqlite3.connect('schedule.db')
    cursor = conn.cursor()
    user_group = ((cursor.execute("SELECT user_group  FROM `users` WHERE user_chat_id =(?)", (user_chat_id,))).fetchone())[0]
    user_group_lessons = requests.get('https://api.rozklad.org.ua/v2/groups/{0}/timetable'.format(user_group))
    user_group_lessons = user_group_lessons.json()
    if( user_group_lessons['statusCode'] == 200):
        for week in range(1,3):
            text = '<b>–†–æ–∑–∫–ª–∞–¥ –≥—Ä—É–ø–∏ - {0} -</b>\n\n'.format(user_group_lessons['data']['group']['group_full_name'], )
            text +='<b>–ù–µ–¥—ñ–ª—è - {0}</b>'.format(week) +'\n'
            lessons_days = user_group_lessons['data']['weeks'][str(week)]['days']
            for day in range(1,7):
                lessons_day = lessons_days[str(day)]
                lessons = lessons_day['lessons']
                if len(lessons)== 0 :
                    continue
                text += lessons_day['day_name'] + '\n'
                for lesson in lessons:
                    text += "{0}) {1}  \n".format(lesson["lesson_number"],lesson["lesson_name"])
                    text += "- <code>{0} {1} </code>".format(lesson["lesson_type"],lesson["lesson_room"])
                    if len(lesson["teachers"])!=0:
                       teacher = lesson["teachers"][0]
                       text += "<code>{0}</code> -\n".format(teacher["teacher_name"])

            text += '\n'
            bot.send_message(user_chat_id, text, parse_mode="HTML")
            text = ''
    else:
        text = '–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã: /set. \n–ù–∞–ø—Ä–∏–º–µ—Ä: "/set IV-73" –∏–ª–∏ "/set –Ü–í-73".'
        bot.send_message(user_chat_id, text, parse_mode="HTML")
    conn.close()

# # # —Ñ-—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –æ—Ç—Å—ã–ª–∞–µ—Ç —Ä–∞—Å—Å–ø–∏—Å–∞–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è  (–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ñ–æ—Ä–º–µ)
@bot.message_handler(commands=['today'])
def handle_all(message):
    user_chat_id  = user_chat_id_try(message)
    text =showDay(RusArr[today] , user_chat_id )
    bot.send_message(user_chat_id ,text, parse_mode= "HTML")
#
# # # —Ñ-—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –æ—Ç—Å—ã–ª–∞–µ—Ç —Ä–∞—Å—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–≤—Ç—Ä–∞ (–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ñ–æ—Ä–º–µ)
@bot.message_handler(commands=['tomorrow'])
def handle_all(message):
    user_chat_id = user_chat_id_try(message)
    text =showDay(RusArr[today+1] ,  user_chat_id)
    bot.send_message( user_chat_id,text, parse_mode= "HTML")
#
# # # —Ñ-—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –∞–≤—Ç–æ—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π   (–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ñ–æ—Ä–º–µ)
@bot.message_handler(commands=['settime'])
def handle_all(message):
    txt= message.text[9:14]
    try:
        time = datetime.time(int(txt[0:2]), int(txt[3:5]))
    except ValueError:
        bot.send_message(message.chat.id, '<b>–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ.</b>\n\n–í–≤–µ–¥—ñ—Ç—å —á–∞—Å —É —Ñ–æ—Ä–º–∞—Ç—ñ - <code>/settime 21:30</code> . ', parse_mode="HTML")
        return 0
    conn = sqlite3.connect('schedule.db')
    cursor = conn.cursor()
    user_chat_id = user_chat_id_try(message)
    cursor.execute("UPDATE notification SET time_n ='{0}' WHERE user_chat_id='{1}'".format(time, user_chat_id))
    conn.commit()
    txt = '–†–æ–∑–∫–ª–∞–¥ –±—É–¥–µ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏—Å—è —â–æ–¥–µ–Ω–Ω–æ –æ - <code>{0}:{1}</code>'.format(time.hour,time.minute)
    conn.close()
    bot.send_message(message.chat.id, txt, parse_mode="HTML")

# # # —Ñ-—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã  (–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ñ–æ—Ä–º–µ)
@bot.message_handler(commands=['help'])
def handle_help(message):
    bot.send_message(message.chat.id, '/monday - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫. \n/tuesday - —Ä–∞—Å–ø–∏—Å–∞–Ω–Ω–∏–µ –≤–æ –≤—Ç–æ—Ä–Ω–∏–∫. \n/wednesday - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤–æ –≤ —Å—Ä–µ–¥—É. \n/thursday  - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ —á–µ—Ç–≤–µ—Ä–≥.\n/friday - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –ø—è—Ç–Ω–∏—Ü—É.\n/saturday - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ —Å—É–±–±–æ—Ç—É.\n/map - –≤—ã–¥–∞—Ç—å –∫–∞—Ä—Ç—É –ö–ü–ò.\n/help - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞.\n/weather - –ø–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–≥–æ–¥—É –≤ –ö–∏–µ–≤–µ.\n/coin - –ø–æ–¥–±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç—É –∏ —Ä–µ—à–∏—Ç—å —Å–ø–æ—Ä.\n/creator - –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å.\n\nü§ñ –≠—Ç–æ—Ç –±–æ—Ç –±—É–¥–µ—Ç –¥–∞–ª—å—à–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è –∏ —É–ª—É—á—à–∞—Ç—å—Å—è.')








@bot.message_handler(commands=['map'])
def welcome(message):
    photo = open('static/map.jpg', 'rb')
    bot.send_photo(message.chat.id, photo)




@bot.message_handler(commands=['weather'])
def weather(message):
    bot.send_message(message.chat.id,
                     "https://meteo.ua/34/kiev".format(
                         message.from_user, bot.get_me()))


@bot.message_handler(commands=['creator'])
def creator(message):
    bot.send_message(message.chat.id,
                     "–í–æ—Ç –ª–∏–Ω–∫ –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞: @NVV007".format(
                         message.from_user, bot.get_me()))





@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'ios':
                bot.send_message(call.message.chat.id, 'https://apps.apple.com/ru/app/kpi-schedule/id1455536065')
            elif call.data == 'android':
                bot.send_message(call.message.chat.id, 'https://play.google.com/store/apps/details?id=com.goldenpiedevs.schedule.app&hl=ru')
            elif call.data == 'web':
                bot.send_message(call.message.chat.id, 'http://rozklad.kpi.ua/Schedules/ScheduleGroupSelection.aspx')

    except Exception as e:
        print(repr(e))








# # —Ñ-—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É  (–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ñ–æ—Ä–º–µ)
@bot.message_handler(commands=['set'])
def handle_sunday(message):
    user_chat_id = user_chat_id_try(message)
    group_name = message.text[5:]
    if group_name == '' or None :
        bot.send_message(user_chat_id,'–ì—Ä—É–ø–ø–∞ –Ω–µ –≤–≤–µ–¥–µ–Ω–∞\n –§–æ—Ä–º–∞—Ç -<code> /set –ë–°-62 </code>',parse_mode= "HTML")
    else:
        group_inf = requests.get('http://api.rozklad.org.ua/v2/groups/{0}'.format(group_name))
        group_inf = group_inf.json()
        if group_inf['statusCode'] == 200 :
            conn = sqlite3.connect('schedule.db')
            cursor = conn.cursor()
            cursor.execute("UPDATE users SET user_group ='{0}' WHERE user_chat_id='{1}'".format(group_inf['data']['group_id'],user_chat_id))
            bot.send_message(user_chat_id,'–í—ã–±—Ä–∞–Ω–Ω–∞—è –≥—Ä—É–ø–ø–∞: <b>{0}</b>\n–î–ª—è —Å–º–µ–Ω—ã –≥—Ä—É–ø–ø—ã –ø—Ä–∏–º–µ–Ω–∏ –∫–æ–º–∞–Ω–¥—É: /set.\n–í —Ñ–æ—Ä–º–∞—Ç–µ: "/set –Ü–í-73" –∏–ª–∏ "/set IV-73".'.format(group_inf['data']['group_full_name'].upper(), ),parse_mode="HTML")
            conn.commit()
            conn.close()
        else:
            bot.send_message(user_chat_id,'–ì—Ä—É–ø–ø—É <b>"{0}"</b> –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. \n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.'.format(group_name, ), parse_mode="HTML")



##########################################################################################################################################
##  –§-–Ø –î–õ–Ø –°–¢–ê–†–¢–ê , –ü–ï–†–ï–î–ê–ï–¢ –ö–õ–ê–í–ò–ê–¢–£–†–£ –ò –î–ê–ï–¢ –ü–û–ù–Ø–¢–¨ –ï–°–¢–¨ –õ–ò –¢–´ –í –†–ï–ì–ò–°–¢–†–ï  ######################################################################################################################################

@bot.message_handler(commands=['start'])
def handle_start(message):
    user_markup = telebot.types.ReplyKeyboardMarkup(True, True)
    user_markup.row('üó∫ –ö–∞—Ä—Ç–∞ –ö–ü–ò', 'üìñ –ü–æ–º–æ—á—å —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
    user_markup.row('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫')
    user_markup.row('–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥')
    user_markup.row('–ü—è—Ç–Ω–∏—Ü—è', '–°—É–±–±–æ—Ç–∞ ')

    conn = sqlite3.connect('schedule.db')
    cursor = conn.cursor()
    user_chat_id = user_chat_id_try(message)
    user_inf = cursor.execute("SELECT *  FROM `users` WHERE user_chat_id =(?)",(user_chat_id,))
    group_id = user_inf.fetchone()[2]
    if group_id == None or group_id=='' :
        group_name = '–ì—Ä—É–ø–ø–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞.'
    else :
        group_inf = requests.get('http://api.rozklad.org.ua/v2/groups/{0}'.format(group_id))
        group_inf = group_inf.json()
        if group_inf['statusCode'] == 200 :
            group_name = group_inf["data"]["group_full_name"]
            group_name = '–¢–≤–æ—è –≤—ã–±—Ä–∞–Ω–Ω–∞—è –≥—Ä—É–ø–ø–∞: <b>{0}</b>.'.format(group_name.upper(),)
        else:
            group_name= '–ì—Ä—É–ø–ø–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞.'
    txt = '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, <b>{0}</b>! –ó–æ–≤–∏ –º–µ–Ω—è –•–µ–ª–ø–µ—Ä–æ–º! \n{1}\n–î–ª—è —Å–º–µ–Ω—ã –≥—Ä—É–ø–ø—ã –ø—Ä–∏–º–µ–Ω–∏ –∫–æ–º–∞–Ω–¥—É /set.\n–ù–∞–ø—Ä–∏–º–µ—Ä: "/set IV-73" –∏–ª–∏ "/set –Ü–í-73".'.format(message.chat.username, group_name )
    #txt = txt +'\n\n–§—É–Ω–∫—Ü—ñ—è –∞–≤—Ç–æ–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è -<code> /settime</code>\n–§–æ—Ä–º–∞—Ç  -<code> /settime 21:30</code>'
    sti = open('static/welcome.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)
    bot.send_message(user_chat_id,txt,reply_markup=user_markup ,parse_mode= "HTML")
    conn.close()




@bot.message_handler(commands=['coin'])
def handle_start(message):
    coin = random.randint(0, 1)
    if coin == 0:
        bot.send_message(message.chat.id,"üí∞ –û—Ä—ë–ª.")
    else:
        bot.send_message(message.chat.id,"üí∞ –†–µ—à–∫–∞.")




##########################################################################################################################################
##########################################################################################################################################
#
# # # —Ñ-—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –æ—Ç—Å—ã–ª–∞–µ—Ç —Ä–∞—Å—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—ã–±—Ä–∞–Ω—ã–π –¥–µ–Ω—å , –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫—É –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ (–≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–π —Ñ–æ—Ä–º–µ)
@bot.message_handler(content_types=['text'])
def handle_text(message):
    user_chat_id = user_chat_id_try(message)
    RusArr= {'–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':1, '–í—Ç–æ—Ä–Ω–∏–∫': 2, '–°—Ä–µ–¥–∞':3 ,'–ß–µ—Ç–≤–µ—Ä–≥': 4, '–ü—è—Ç–Ω–∏—Ü—è' :5, '–°—É–±–±–æ—Ç–∞':6}
    if (message.text in RusArr.keys()) :
        bot.send_message(user_chat_id, showDay(RusArr[message.text], user_chat_id), parse_mode="HTML")
    elif message.text == 'üó∫ –ö–∞—Ä—Ç–∞ –ö–ü–ò':
        photo = open('static/map.jpg', 'rb')
        bot.send_photo(message.chat.id, photo)
    elif message.text == 'üìñ –ü–æ–º–æ—á—å —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
        markup = types.InlineKeyboardMarkup(row_width=2)
        item1 = types.InlineKeyboardButton("IOS", callback_data='ios')
        item2 = types.InlineKeyboardButton("Android", callback_data='android')
        item3 = types.InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ", callback_data='web')
        markup.add(item1, item2, item3)
        bot.send_message(message.chat.id, '–í–æ—Ç, –ø–æ–ª—å–∑—É–π—Å—è –∏–∑ –æ—Ñ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:', reply_markup=markup)
    else:
        bot.send_message(user_chat_id, '<b>"{0}"</b>? –Ø –¥–∞–∂–µ –∏ –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å, –ø–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ –º–µ–Ω—è —ç—Ç–æ–º—É –µ—â—ë –Ω–µ —É—á–∏–ª–∏ üò¢'.format(message.text, ),parse_mode="HTML")



# ##########################################################################################################################################
# ##########################################################################################################################################

# s = input('-')
# bot.send_message(399127688,'<i>–ê–º–∏–Ω</i> : <code>{0}</code>'.format(s,), parse_mode= "HTML")
bot.polling(none_stop=True)